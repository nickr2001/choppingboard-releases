name: Build NSIS Installer

on:
  release:
    types: [published]

jobs:
  build-installer:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set release variables
      - name: Set release variables
        run: |
          echo "RELEASE_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          echo "RELEASE_ZIP=CB-${{ github.event.release.tag_name }}.zip" >> $GITHUB_ENV
          echo "RELEASE_FOLDER=CB-${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      # Step 3: Debug - verify environment variables
      - name: Debug environment variables
        run: |
          echo "RELEASE_TAG='${{ env.RELEASE_TAG }}'"
          echo "RELEASE_ZIP='${{ env.RELEASE_ZIP }}'"
          echo "RELEASE_FOLDER='${{ env.RELEASE_FOLDER }}'"

      # Step 4: Install GitHub CLI
      - name: Install GitHub CLI
        run: choco install gh -y

      # Step 5: Download release asset from releases repo (Windows-safe)
      - name: Download release asset
        run: |
          gh release download "${{ env.RELEASE_TAG }}" --repo "nickr2001/choppingboard-releases" --pattern "${{ env.RELEASE_ZIP }}"

      # Step 6: Fail early if zip is missing
      - name: Check zip exists
        run: |
          if (-Not (Test-Path "${{ env.RELEASE_ZIP }}")) {
            Write-Error "Release zip '${{ env.RELEASE_ZIP }}' not found. Aborting workflow."
            exit 1
          }

      # Step 7: List downloaded files
      - name: List downloaded files
        run: dir

      # Step 8: Extract the zip
      - name: Extract zip
        run: Expand-Archive -Path "${{ env.RELEASE_ZIP }}" -DestinationPath .

      # Step 9: Fail early if executable is missing
      - name: Check executable exists
        run: |
          $exePath = "${{ env.RELEASE_FOLDER }}\ChoppingBoard.exe"
          if (-Not (Test-Path $exePath)) {
            Write-Error "Executable '$exePath' not found inside extracted folder. Aborting workflow."
            exit 1
          }

      # Step 10: List extracted folder
      - name: List extracted files
        run: dir "${{ env.RELEASE_FOLDER }}" /s

      # Step 11: Install NSIS
      - name: Install NSIS
        run: choco install nsis -y

      # Step 12: Build NSIS installer
      - name: Build NSIS installer
        run: |
          makensis /DAPPVER="${{ env.RELEASE_TAG }}" /DReleaseFolder="${{ env.RELEASE_FOLDER }}" installer.nsi

      # Step 13: Verify installer exists
      - name: Verify installer exists
        run: dir

      # Step 14: Upload installer to the release
      - name: Upload installer to the release
        uses: softprops/action-gh-release@v2
        with:
          files: installer_ChoppingBoard_${{ env.RELEASE_TAG }}.exe
