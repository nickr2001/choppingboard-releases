name: Build NSIS Installer

on:
  release:
    types: [published]

jobs:
  build-installer:
    runs-on: windows-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set release variables
      - name: Set release variables
        shell: pwsh
        run: |
          Add-Content -Path $Env:GITHUB_ENV -Value "RELEASE_TAG=${{ github.event.release.tag_name }}"
          Add-Content -Path $Env:GITHUB_ENV -Value "RELEASE_ZIP=CB-${{ github.event.release.tag_name }}.zip"
          Add-Content -Path $Env:GITHUB_ENV -Value "RELEASE_FOLDER=CB-${{ github.event.release.tag_name }}"

      # Debug variables
      - name: Debug environment variables
        shell: pwsh
        run: |
          Write-Host "RELEASE_TAG='$env:RELEASE_TAG'"
          Write-Host "RELEASE_ZIP='$env:RELEASE_ZIP'"
          Write-Host "RELEASE_FOLDER='$env:RELEASE_FOLDER'"

      # Install GitHub CLI
      - name: Install GitHub CLI
        run: choco install gh -y

      # Download release asset
      - name: Download release asset
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download "$env:RELEASE_TAG" --repo "nickr2001/choppingboard-releases" --pattern "$env:RELEASE_ZIP"

      # Fail early if zip missing
      - name: Check zip exists
        shell: pwsh
        run: |
          if (-Not (Test-Path "$env:RELEASE_ZIP")) {
            Write-Error "Release zip '$env:RELEASE_ZIP' not found. Aborting workflow."
            exit 1
          }

      # List downloaded files
      - name: List downloaded files
        shell: pwsh
        run: dir

      # Extract the zip into the top-level release folder
      - name: Extract the zip
        shell: pwsh
        run: Expand-Archive -Path "$env:RELEASE_ZIP" -DestinationPath "$env:RELEASE_FOLDER"

      # Fail early if executable missing (nested folder)
      - name: Check executable exists
        shell: pwsh
        run: |
          $exePath = Join-Path "$env:RELEASE_FOLDER" "$env:RELEASE_FOLDER\ChoppingBoard.exe"
          if (-Not (Test-Path $exePath)) {
            Write-Error "Executable '$exePath' not found inside extracted folder. Aborting workflow."
            exit 1
          }

      # List extracted files recursively
      - name: List extracted files
        shell: pwsh
        run: dir "$env:RELEASE_FOLDER" -Recurse

      # Install NSIS
      - name: Install NSIS
        run: choco install nsis -y

      # Build NSIS installer using absolute path
      - name: Build NSIS installer
        shell: pwsh
        run: |
          $nsisPath = "${env:ProgramFiles(x86)}\NSIS\makensis.exe"
          $releaseFolderPath = Join-Path "$env:RELEASE_FOLDER" "$env:RELEASE_FOLDER"
          Write-Host "Passing absolute path to NSIS: $releaseFolderPath"
          & "$nsisPath" /DAPPVER="$env:RELEASE_TAG" /DReleaseFolder="$releaseFolderPath" installer.nsi

      # Verify installer exists
      - name: Verify installer exists
        shell: pwsh
        run: dir
          
      # Upload installer to the release
      - name: Upload installer to the release
        uses: softprops/action-gh-release@v2
        with:
          files: installer_ChoppingBoard_$env:RELEASE_TAG.exe
